{"version":3,"sources":["components/common/ContextMain.tsx","components/common/constant.tsx","components/common/commonApi.tsx","components/Router/PrivateRoute/index.tsx","components/common/CustomTable/customTable.tsx","components/Newwallets/Newwallets.tsx","components/common/Helperfunction.tsx","components/Login/Login.tsx","components/Router/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ContextMain","React","createContext","API","CategoriesAPI","props","useState","userData","setUserData","isValid","setIsValid","isReferValid","setReferValid","useEffect","axios","get","then","response","data","console","log","catch","error","location","pathname","Privateroute","withRouter","state","CommonApi","validationDynamic","localStorage","removeItem","history","push","undefined","getItem","length","render","className","Provider","value","Card","CardContent","Button","variant","color","onClick","component","to","CircularProgress","CustomTable","PartnerReferral","handleCloseSub","setState","date_match_modal","showModal","eve","ReactGA","event","category","action","label","modalData","dataDump","map","refs","i","dataSales","firstname","lastname","email","phone","hasPremium","Math","max","bids","o","amount","avatarUrl","dumpData","this","context","options","paginationType","search","paging","filtering","showTitle","toolbar","emptyRowsWhenPaging","pageSize","actionsColumnIndex","localization","actions","icon","tooltip","evt","columns","title","field","Dialog","open","onClose","aria-labelledby","aria-describedby","name","src","avatar","alt","bidsData","DialogActions","Component","contextType","componentDidMount","set","page","pageview","changeState","setItem","renderFormSign","Typography","CardActions","size","process","renderDialog","CustomRouter","isRedirect","basename","PrivateRoute","path","Newwallets","Login","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82b3460e.chunk.js","sourcesContent":["\n\nimport React from 'react';\n\n\nexport const ContextMain = React.createContext({});\n","\nconst HEAD_URL = process.env.REACT_APP_URL\nexport const PAGE_TWO_ERROR_TEXT = {\n    'firstNameLabel': \"Invalid First Name.\",\n    'amountLabel': \"Invalid Company Name.\",\n    'mobileNumberLabel': \"Invalid Mobile Number.\",\n    \"selectErrorLabel\": \"No name selected\",\n    \"emailLabel\": \"Invalid email\",\n    \"passwordLabel\": \"Invalid password\"\n\n}\nexport const API = {\n    \"main_url\": \"https://intense-tor-76305.herokuapp.com/merchants\",\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { API } from \"./constant\"\nfunction CategoriesAPI(props: any) {\n    const [userData, setUserData] = useState([]);\n    const [isValid, setIsValid] = useState(false);\n    const [isReferValid, setReferValid] = useState(false);\n\n    const mainApi = () => {\n        axios.get(API.main_url)\n            .then((response: any) => {\n                if (response.data) {\n                    console.log(\"data\", response.data)\n                    setUserData(response.data)\n                    setIsValid(true)\n                    console.log(\"byr2\", userData)\n                }\n\n            }).catch((error: any) => {\n                console.log(\"error\", error)\n            });\n\n    }\n\n    useEffect(() => {\n        mainApi()\n    }, [props.location.pathname])\n\n    return {\n\n        userData: [userData, setUserData],\n        isValid: [isValid, setIsValid],\n        isReferValid: [isReferValid, setReferValid],\n    }\n}\n\nexport default CategoriesAPI\n","import { Card, CardContent } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport {\n    Route,\n    Redirect,\n    withRouter\n} from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport \"../../style.css\"\nimport { ContextMain } from \"./../../common/ContextMain\"\nimport axios from \"axios\"\nimport { API } from '../../common/constant';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CommonApi from \"../../common/commonApi\"\n\nconst Privateroute = withRouter((props: any) => {\n    const state = CommonApi(props)\n\n    const validationDynamic = () => {\n        localStorage.removeItem(\"Login\");\n        props.history.push('/')\n    }\n\n    console.log(\"pp\", state.isValid[1])\n    console.log(\"keysss\", state.userData[0])\n    if (localStorage.getItem(\"Login\") != undefined && localStorage.getItem(\"Login\") != null) {\n        if (state.userData[0].length > 0) {\n            return (\n                <Route render={() =>\n                    <div className=\"bg-grey full-len mt-3\" >\n                        <ContextMain.Provider value={state}>\n                            <div className=\"max-width max-width-padd mt-4\">\n                                <Card className=\"custom-card card-dashboard\">\n                                    <CardContent >\n                                        <h1 className=\"header-main\">Trav Clan Assignment</h1>\n                                        <Button variant=\"contained\" color=\"primary\" className=\"btn-class mt-4\" onClick={validationDynamic}>Logout</Button>\n                                        <div className=\"col-md-12 mt-5\">\n                                            <props.component />\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </div>\n                        </ContextMain.Provider>\n                    </ div>} />\n            )\n        }\n        else {\n            if (state.isReferValid[0]) {\n                return (\n                    <Redirect to={{\n                        pathname: `/`,\n                    }} />\n                )\n            } else {\n                return (\n                    <div className=\"Circular-Progress\">\n                        <CircularProgress color=\"inherit\" />\n                    </div>\n                )\n            }\n        }\n    }\n    else {\n        return (\n            <Redirect to={{\n                pathname: `/`,\n            }} />\n        )\n    }\n\n\n})\nexport default Privateroute;\n","import react from 'react'\nimport MaterialTable from 'material-table'\n\nexport default function CustomTable(props: any) {\n    return (\n        <MaterialTable\n            {...props}\n        />\n    )\n}","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { PAGE_TWO_ERROR_TEXT } from './../common/constant';\nimport { isMobileValidNumber, dumpData } from './../common/Helperfunction';\nimport axios from \"axios\"\nimport { API } from './../common/constant';\nimport ReactGA from 'react-ga';\nimport CustomTable from './../common/CustomTable/customTable'\nimport { ContextMain } from './../common/ContextMain'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nclass PartnerReferral extends React.Component<any,\n    {\n\n        date_match_modal: boolean,\n        modalData: any\n    }> {\n\n    constructor(props: any) {\n        super(props);\n        this.state =\n        {\n            date_match_modal: false,\n            modalData: \"\"\n        }\n\n    }\n\n\n    handleCloseSub = () => {\n        this.setState({ date_match_modal: false })\n    };\n\n    showModal = (eve: any, data: any) => {\n        { console.log(\"modaldata\", data) }\n        ReactGA.event({\n            category: `Modal`,\n            action: 'Modal',\n            label: 'Modal Rendered'\n        });\n        this.setState({ date_match_modal: true, modalData: data })\n    }\n    render() {\n        const COL_REFER = [\n            { title: \"Customer Name\", field: \"name\" },\n            { title: \"Email\", field: \"email\" },\n            { title: \"Phone\", field: \"phone\" },\n            { title: \"Premium\", field: \"hasPremium\" },\n            { title: \"Max Bids\", field: \"bids\" },\n\n        ];\n\n        const dataDump: any = dumpData(this.context?.userData[0])\n\n        const COL_INSIDE = [\n            { title: \"Amount\", field: \"amount\" },\n            { title: \"Car Title\", field: \"carTitle\" },\n        ];\n\n\n        return (\n            <div className=\"max-width-in\">\n\n                <CustomTable options={\n                    {\n                        paginationType: \"stepped\",\n                        search: true,\n                        paging: true,\n                        filtering: false,\n                        showTitle: false,\n                        toolbar: true,\n                        emptyRowsWhenPaging: false,\n                        pageSize: 5,\n                        actionsColumnIndex: -1\n                    }\n                }\n                    localization={\n                        {\n                            // body: {\n                            //     emptyDataSourceMessage: <> <img src={\n                            //         tableIcon\n                            //     }\n                            //         alt=\"Icon\" className=\"table-icon\" /> <Typography component=\"h4\" className=\"table-text\">Make your first referral and start earning today.</Typography> <div className=\"table-refer\"> <Button variant=\"contained\" color=\"primary\" className=\"custom-primary-button-refer\"><Link to='home'><img src={\n                            //             btnReferEarnings\n                            //         }\n                            //             alt=\"icon\" className=\"btn-gap\" />Refer Now</Link> </Button> </div> </>,\n                            // }\n                        }\n                    }\n                    actions={[\n                        {\n                            icon: () => <VisibilityIcon />,\n                            tooltip: 'Show User',\n                            onClick: (evt: any, data: any) => {\n                                this.showModal(evt, data)\n                            }\n                        }\n                    ]}\n\n                    columns={\n                        COL_REFER\n                    }\n                    data={\n                        dataDump\n                    }\n                />\n\n                <Dialog\n                    open={this.state.date_match_modal}\n                    onClose={this.handleCloseSub}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\">\n                    {this.state.modalData == \"\" ?\n                        <h3 className=\"modal-title\">Fetching</h3>\n                        : <>\n                            <h3 className=\"modal-title\">{this.state.modalData.name}</h3>\n                            <img src={this.state.modalData.avatar} alt=\"icon\" />\n                            <CustomTable options={\n                                {\n                                    paginationType: \"stepped\",\n                                    search: true,\n                                    paging: true,\n                                    filtering: false,\n                                    showTitle: false,\n                                    toolbar: true,\n                                    emptyRowsWhenPaging: false,\n                                    pageSize: 5,\n                                    actionsColumnIndex: -1\n                                }\n                            }\n                                columns={\n                                    COL_INSIDE\n                                }\n                                data={\n                                    this.state.modalData.bidsData\n                                }\n                            />\n\n                            <DialogActions>\n                                <Button onClick={this.handleCloseSub} color=\"primary\">\n                                    Close\n                            </Button>\n                            </DialogActions>\n                        </>}\n\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPartnerReferral.contextType = ContextMain\nexport default PartnerReferral;","export const isMobileValidNumber = (mobileNumber: any) => {\n    if (mobileNumber.length > 10) {\n        return false;\n    }\n    mobileNumber = parseInt(mobileNumber, 10);\n    const mob = /^\\d{10}$/;\n    return mob.test(mobileNumber);\n};\n\nexport const dumpData = (data: any) => {\n    const dataDump: any = []\n    let rowId = 1;\n    if (data.length > 0) {\n        data.map((refs: any, i: number) => {\n            const dataSales: any = {};\n            dataSales['name'] = refs.firstname + \" \" + refs.lastname\n            dataSales['email'] = refs.email\n            dataSales['phone'] = refs.phone\n            dataSales['hasPremium'] = refs.hasPremium\n            dataSales['bids'] = Math.max(...refs.bids.map((o: any) => o.amount), 0);\n            dataSales['bidsData'] = refs.bids\n            dataSales['avtar'] = refs.avatarUrl\n            dataDump.push(dataSales)\n        })\n        return dataDump\n    }\n}","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { PAGE_TWO_ERROR_TEXT } from './../common/constant';\nimport { isMobileValidNumber } from './../common/Helperfunction';\nimport axios from \"axios\"\nimport { API } from './../common/constant';\nimport { Redirect } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport ReactGA from 'react-ga'\n\nclass PartnerReferral extends React.Component<any,\n    {\n\n        date_match_modal: boolean,\n        action: string,\n\n\n    }> {\n\n    constructor(props: any) {\n        super(props);\n        this.state =\n        {\n\n            date_match_modal: false,\n            action: \"\",\n\n        }\n\n    }\n\n\n    componentDidMount = () => {\n        ReactGA.set({ page: '/login' })\n        ReactGA.pageview('/login');\n        ReactGA.event({\n            category: `Page`,\n            action: 'Login',\n            label: 'Login Rendered'\n        });\n    }\n\n\n    handleCloseSub = () => {\n        this.setState({ date_match_modal: false })\n    };\n\n\n    changeState = () => {\n        localStorage.setItem(\"Login\", \"true\")\n        this.setState({ action: \"home\" })\n    }\n    renderFormSign = () => {\n\n        return (\n            <Card className=\"\" variant=\"outlined\">\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\" className=\"main-title mb-3\">\n                        BID APP\n         </Typography>\n\n                    <Button variant=\"contained\" color=\"primary\" className=\"btn-class mt-4\" onClick={this.changeState}>LOGIN</Button>\n\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\">By: Malay Mishra</Button><br />\n                    <Button size=\"small\">{process.env.REACT_APP_ENV}</Button>\n                </CardActions>\n            </Card>\n        )\n    }\n\n    renderDialog = () => {\n        const { date_match_modal\n        } = this.state;\n        return (\n            <Dialog\n                open={date_match_modal}\n                onClose={this.handleCloseSub}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\">\n                <h3 className=\"modal-title\">Hi, </h3>\n                <h3 className=\"modal-subtitle\">Wrong Credentials </h3>\n\n                <DialogActions>\n                    <Button onClick={this.handleCloseSub} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n    render() {\n\n\n        if (this.state.action === 'home') {\n            return (\n                <Redirect to={{\n                    pathname: `/home`\n                }} />\n            )\n        }\n\n        return (\n            <div className=\"max-width-in\">\n                <this.renderFormSign />\n                <this.renderDialog />\n\n            </div>\n        );\n    }\n}\n\nexport default PartnerReferral;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom';\n\n\nimport PrivateRoute from './PrivateRoute';\n\nimport Newwallets from \"../Newwallets/Newwallets\";\nimport Login from \"../Login/Login\";\n\nclass CustomRouter extends React.Component<any, {\n\n    isRedirect: boolean,\n\n}> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n\n            isRedirect: false,//Make this true id you want to redirect to cleartax page\n        }\n    }\n    render() {\n        return (\n            <Router basename=\"/carbid\">\n                <Switch>\n                    <PrivateRoute path=\"/home\" component={Newwallets} />\n                    <Route path=\"/login\" component={Login} />\n                </Switch>\n            </Router>\n        );\n    }\n}\nexport default CustomRouter;\n\n","import React from 'react';\nimport './App.css';\nimport CustomRoutes from './components/Router';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <CustomRoutes />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactGA from 'react-ga';\n\nReactGA.initialize(\"UA-194888640-1\");\nReactGA.pageview(window.location.pathname + window.location.search);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}