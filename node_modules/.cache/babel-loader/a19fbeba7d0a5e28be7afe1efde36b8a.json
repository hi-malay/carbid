{"ast":null,"code":"var _jsxFileName = \"/Users/himalaya/Documents/carbid/src/components/Login/Login.tsx\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { PAGE_TWO_ERROR_TEXT } from './../common/constant';\nimport { Redirect } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ReactGA from 'react-ga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PartnerReferral extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = void 0;\n    this.inputRef = void 0;\n    this.scrollRef = void 0;\n    this.numberOfEmpRef = void 0;\n    this.emailRef = void 0;\n    this.nameRef = void 0;\n    this.phoneRef = void 0;\n    this.companyNameRef = void 0;\n\n    this.validationDynamic = () => {\n      var _this$state$password;\n\n      if (this.state.name === \"\" && this.state.islogin === false) {\n        this.setState({\n          nameError: true,\n          nameErrorLabel: PAGE_TWO_ERROR_TEXT.firstNameLabel,\n          saveDetailsEnable: false\n        });\n        return;\n      } else if (this.state.email === \"\") {\n        this.setState({\n          emailError: true,\n          emailErrorLabel: PAGE_TWO_ERROR_TEXT.emailLabel,\n          saveDetailsEnable: false\n        });\n        return;\n      } else if (((_this$state$password = this.state.password) === null || _this$state$password === void 0 ? void 0 : _this$state$password.length) === 0) {\n        this.setState({\n          passwordError: true,\n          passwordErrorLabel: PAGE_TWO_ERROR_TEXT.passwordLabel,\n          saveDetailsEnable: false\n        });\n        return;\n      }\n\n      let data = {\n        \"name\": this.state.name,\n        \"email\": this.state.email,\n        \"password\": this.state.password\n      };\n      console.log(\"login\", this.state.islogin);\n\n      if (!this.state.islogin) {\n        ReactGA.event({\n          category: `Sign Up clicked`,\n          action: 'Sign Up clicked',\n          label: 'Sign Up clicked'\n        });\n      } else {\n        ReactGA.event({\n          category: `Login clicked`,\n          action: 'Login clicked',\n          label: 'Login clicked renders'\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      ReactGA.set({\n        page: '/login'\n      });\n      ReactGA.pageview('/login');\n      ReactGA.event({\n        category: `Page`,\n        action: 'Login',\n        label: 'Login Rendered'\n      });\n    };\n\n    this.handleInputChange = (event, key) => {\n      const value = event.target.value;\n      const setObj = {};\n      setObj[key] = value;\n      this.setState(setObj);\n      this.setState({\n        nameError: false,\n        nameErrorLabel: '',\n        emailError: false,\n        emailErrorLabel: '',\n        passwordError: false,\n        passwordErrorLabel: \"\",\n        saveDetailsEnable: true\n      });\n    };\n\n    this.handleCloseSub = () => {\n      this.setState({\n        date_match_modal: false,\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      });\n    };\n\n    this.renderFormSign = () => {\n      const {\n        name,\n        nameError,\n        nameErrorLabel,\n        email,\n        emailError,\n        emailErrorLabel,\n        password,\n        passwordErrorLabel,\n        passwordError,\n        saveDetailsEnable,\n        date_match_modal\n      } = this.state;\n      console.log(\"process\", process.env);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"\",\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            className: \"main-title mb-3\",\n            children: \"Payment Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            children: \"By: Malay Mishra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            children: process.env.REACT_APP_ENV\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderFormLog = () => {\n      const {\n        name,\n        nameError,\n        nameErrorLabel,\n        email,\n        emailError,\n        emailErrorLabel,\n        password,\n        passwordErrorLabel,\n        passwordError,\n        saveDetailsEnable,\n        date_match_modal\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"\",\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            className: \"main-title mb-3\",\n            children: \"Payment Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"off\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4 mt-3\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Email\",\n                  value: email === null ? \"\" : email,\n                  error: emailError,\n                  helperText: emailErrorLabel,\n                  type: \"text\",\n                  margin: \"normal\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  className: \"custom-input\" // disabled={isAccountDetailsDisabled}\n                  ,\n                  name: \"email\",\n                  \"data-id\": \"email\",\n                  onChange: event => this.handleInputChange(event, \"email\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4 mt-3\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Password\",\n                  value: password === null ? \"\" : password,\n                  error: passwordError,\n                  helperText: passwordErrorLabel,\n                  type: \"password\",\n                  margin: \"normal\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  className: \"custom-input\" // disabled={isAccountDetailsDisabled}\n                  ,\n                  name: \"password\",\n                  \"data-id\": \"password\",\n                  onChange: event => this.handleInputChange(event, \"password\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4 mt-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4 mt-3\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  className: saveDetailsEnable === true ? \"btn-class mt-4\" : \"btn-class-default mt-4\",\n                  onClick: () => this.validationDynamic(),\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-7 text-right mt-5\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"login-style\",\n                  onClick: () => this.setState({\n                    islogin: false\n                  }),\n                  children: \"New Member? Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            children: \"By: Malay Mishra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            children: process.env.REACT_APP_ENV\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderDialog = () => {\n      const {\n        date_match_modal\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Dialog, {\n        open: date_match_modal,\n        onClose: this.handleCloseSub,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-title\",\n          children: \"Hi, \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-subtitle\",\n          children: \"Wrong Credentials \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleCloseSub,\n            color: \"primary\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      name: '',\n      nameError: false,\n      nameErrorLabel: '',\n      email: '',\n      emailError: false,\n      emailErrorLabel: '',\n      password: '',\n      passwordError: false,\n      passwordErrorLabel: '',\n      saveDetailsEnable: true,\n      date_match_modal: false,\n      action: \"\",\n      islogin: false\n    };\n  }\n\n  render() {\n    if (this.state.action === 'home') {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: `/all-wallet`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-width-in\",\n      children: [this.state.islogin ? /*#__PURE__*/_jsxDEV(this.renderFormLog, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(this.renderFormSign, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(this.renderDialog, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PartnerReferral;","map":{"version":3,"sources":["/Users/himalaya/Documents/carbid/src/components/Login/Login.tsx"],"names":["React","TextField","Button","Dialog","DialogActions","PAGE_TWO_ERROR_TEXT","Redirect","Card","CardActions","CardContent","Typography","ReactGA","PartnerReferral","Component","constructor","props","myRef","inputRef","scrollRef","numberOfEmpRef","emailRef","nameRef","phoneRef","companyNameRef","validationDynamic","state","name","islogin","setState","nameError","nameErrorLabel","firstNameLabel","saveDetailsEnable","email","emailError","emailErrorLabel","emailLabel","password","length","passwordError","passwordErrorLabel","passwordLabel","data","console","log","event","category","action","label","componentDidMount","set","page","pageview","handleInputChange","key","value","target","setObj","handleCloseSub","date_match_modal","renderFormSign","process","env","REACT_APP_ENV","renderFormLog","renderDialog","render","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { PAGE_TWO_ERROR_TEXT } from './../common/constant';\nimport { isMobileValidNumber } from './../common/Helperfunction';\nimport axios from \"axios\"\nimport { API } from './../common/constant';\nimport { Redirect } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport ReactGA from 'react-ga'\n\nclass PartnerReferral extends React.Component<any,\n    {\n        name: string,\n        nameError: boolean,\n        nameErrorLabel: string,\n        email: string,\n        emailError: boolean,\n        emailErrorLabel: string,\n        password: string,\n        passwordError: boolean,\n        passwordErrorLabel: string,\n        saveDetailsEnable: boolean,\n        date_match_modal: boolean,\n        action: string,\n        islogin: boolean\n\n    }> {\n    myRef: any;\n    inputRef: any;\n    scrollRef: any;\n    numberOfEmpRef: any;\n    emailRef: any;\n    nameRef: any;\n    phoneRef: any;\n    companyNameRef: any;\n    constructor(props: any) {\n        super(props);\n        this.state =\n        {\n            name: '',\n            nameError: false,\n            nameErrorLabel: '',\n            email: '',\n            emailError: false,\n            emailErrorLabel: '',\n            password: '',\n            passwordError: false,\n            passwordErrorLabel: '',\n            saveDetailsEnable: true,\n            date_match_modal: false,\n            action: \"\",\n            islogin: false\n        }\n\n    }\n\n    validationDynamic = () => {\n        if (this.state.name === \"\" && this.state.islogin === false) {\n            this.setState({ nameError: true, nameErrorLabel: PAGE_TWO_ERROR_TEXT.firstNameLabel, saveDetailsEnable: false })\n            return;\n        } else if (this.state.email === \"\") {\n            this.setState({ emailError: true, emailErrorLabel: PAGE_TWO_ERROR_TEXT.emailLabel, saveDetailsEnable: false })\n            return;\n        } else if (this.state.password?.length === 0) {\n            this.setState({ passwordError: true, passwordErrorLabel: PAGE_TWO_ERROR_TEXT.passwordLabel, saveDetailsEnable: false })\n            return;\n        }\n\n        let data: any = {\n            \"name\": this.state.name,\n            \"email\": this.state.email,\n            \"password\": this.state.password\n        };\n        console.log(\"login\", this.state.islogin)\n        if (!this.state.islogin) {\n            ReactGA.event({\n                category: `Sign Up clicked`,\n                action: 'Sign Up clicked',\n                label: 'Sign Up clicked'\n            });\n        }\n        else {\n            ReactGA.event({\n                category: `Login clicked`,\n                action: 'Login clicked',\n                label: 'Login clicked renders'\n            });\n        }\n\n    }\n    componentDidMount = () => {\n        ReactGA.set({ page: '/login' })\n        ReactGA.pageview('/login');\n        ReactGA.event({\n            category: `Page`,\n            action: 'Login',\n            label: 'Login Rendered'\n        });\n    }\n\n    handleInputChange = (event: any, key: any) => {\n        const value: any = event.target.value;\n        const setObj: any = {};\n        setObj[key] = value;\n        this.setState(setObj)\n        this.setState({\n            nameError: false,\n            nameErrorLabel: '',\n            emailError: false,\n            emailErrorLabel: '',\n            passwordError: false,\n            passwordErrorLabel: \"\",\n            saveDetailsEnable: true\n        })\n    }\n    handleCloseSub = () => {\n        this.setState({ date_match_modal: false, name: \"\", email: \"\", password: \"\" })\n    };\n\n    renderFormSign = () => {\n        const { name,\n            nameError, nameErrorLabel,\n            email, emailError, emailErrorLabel,\n            password, passwordErrorLabel, passwordError, saveDetailsEnable, date_match_modal\n        } = this.state;\n        console.log(\"process\", process.env)\n        return (\n            <Card className=\"\" variant=\"outlined\">\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\" className=\"main-title mb-3\">\n                        Payment Wallet\n         </Typography>\n\n\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\">By: Malay Mishra</Button><br />\n                    <Button size=\"small\">{process.env.REACT_APP_ENV}</Button>\n                </CardActions>\n            </Card>\n        )\n    }\n\n    renderFormLog = () => {\n        const { name,\n            nameError, nameErrorLabel,\n            email, emailError, emailErrorLabel,\n            password, passwordErrorLabel, passwordError, saveDetailsEnable, date_match_modal\n        } = this.state;\n        return (\n            <Card className=\"\" variant=\"outlined\">\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\" className=\"main-title mb-3\">\n                        Payment Wallet\n         </Typography>\n\n                    <form noValidate autoComplete=\"off\">\n                        <div className=\"row mt-3\" >\n                            <div className=\"col-md-4 mt-3\">\n                                <TextField id=\"standard-basic\" label=\"Email\"\n                                    value={(email === null) ? (\"\") : (email)}\n                                    error={emailError}\n                                    helperText={emailErrorLabel}\n                                    type=\"text\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    className=\"custom-input\"\n                                    // disabled={isAccountDetailsDisabled}\n                                    name=\"email\"\n                                    data-id=\"email\"\n                                    onChange={(event) =>\n                                        this.handleInputChange(event, \"email\")\n                                    }\n                                />\n                            </div>\n                            <div className=\"col-md-4 mt-3\">\n                                <TextField id=\"standard-basic\" label=\"Password\"\n                                    value={(password === null) ? (\"\") : (password)}\n                                    error={passwordError}\n                                    helperText={passwordErrorLabel}\n                                    type=\"password\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    className=\"custom-input\"\n                                    // disabled={isAccountDetailsDisabled}\n                                    name=\"password\"\n                                    data-id=\"password\"\n                                    onChange={(event) =>\n                                        this.handleInputChange(event, \"password\")\n                                    }\n                                />\n                            </div>\n                            <div className=\"col-md-4 mt-3\">\n\n                            </div>\n                            <div className=\"col-md-4 mt-3\">\n                                <Button variant=\"contained\" color=\"primary\" className={(saveDetailsEnable === true) ? (\"btn-class mt-4\") : (\"btn-class-default mt-4\")} onClick={() => this.validationDynamic()}>Login</Button>\n                            </div>\n                            <div className=\"col-md-7 text-right mt-5\">\n                                <p className=\"login-style\" onClick={() => this.setState({ islogin: false })}>New Member? Sign Up</p>\n                            </div>\n\n                        </div>\n\n                    </form>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\">By: Malay Mishra</Button><br />\n                    <Button size=\"small\">{process.env.REACT_APP_ENV}</Button>\n                </CardActions>\n            </Card>\n        )\n    }\n    renderDialog = () => {\n        const { date_match_modal\n        } = this.state;\n        return (\n            <Dialog\n                open={date_match_modal}\n                onClose={this.handleCloseSub}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\">\n                <h3 className=\"modal-title\">Hi, </h3>\n                <h3 className=\"modal-subtitle\">Wrong Credentials </h3>\n\n                <DialogActions>\n                    <Button onClick={this.handleCloseSub} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n    render() {\n\n\n        if (this.state.action === 'home') {\n            return (\n                <Redirect to={{\n                    pathname: `/all-wallet`\n                }} />\n            )\n        }\n\n        return (\n            <div className=\"max-width-in\">\n                {this.state.islogin\n                    ? <this.renderFormLog /> :\n                    <this.renderFormSign />\n                }\n                <this.renderDialog />\n\n            </div>\n        );\n    }\n}\n\nexport default PartnerReferral;"]},"metadata":{},"sourceType":"module"}