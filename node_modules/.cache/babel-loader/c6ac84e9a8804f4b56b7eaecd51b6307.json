{"ast":null,"code":"var _jsxFileName = \"/Users/himalaya/Documents/carbid/src/components/Newwallets/Newwallets.tsx\";\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { dumpData } from './../common/Helperfunction';\nimport ReactGA from 'react-ga';\nimport CustomTable from './../common/CustomTable/customTable';\nimport { ContextMain } from './../common/ContextMain';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PartnerReferral extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCloseSub = () => {\n      this.setState({\n        date_match_modal: false\n      });\n    };\n\n    this.showModal = (eve, data) => {\n      {\n        console.log(\"modaldata\", data);\n      }\n      ReactGA.event({\n        category: `Modal`,\n        action: 'Modal',\n        label: 'Modal Rendered'\n      });\n      this.setState({\n        date_match_modal: true,\n        modalData: data\n      });\n    };\n\n    this.state = {\n      date_match_modal: false,\n      modalData: \"\"\n    };\n  }\n\n  render() {\n    var _this$context;\n\n    const COL_REFER = [{\n      title: \"Customer Name\",\n      field: \"name\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }, {\n      title: \"Phone\",\n      field: \"phone\"\n    }, {\n      title: \"Premium\",\n      field: \"hasPremium\"\n    }, {\n      title: \"Max Bids\",\n      field: \"bids\"\n    }];\n    const dataDump = dumpData((_this$context = this.context) === null || _this$context === void 0 ? void 0 : _this$context.userData[0]);\n    const COL_INSIDE = [{\n      title: \"Amount\",\n      field: \"amount\"\n    }, {\n      title: \"Car Title\",\n      field: \"carTitle\"\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-width-in\",\n      children: [/*#__PURE__*/_jsxDEV(CustomTable, {\n        className: \"mt-3\",\n        options: {\n          paginationType: \"stepped\",\n          search: true,\n          paging: true,\n          filtering: false,\n          showTitle: false,\n          toolbar: true,\n          emptyRowsWhenPaging: false,\n          pageSize: 5,\n          actionsColumnIndex: -1\n        },\n        localization: {// body: {\n          //     emptyDataSourceMessage: <> <img src={\n          //         tableIcon\n          //     }\n          //         alt=\"Icon\" className=\"table-icon\" /> <Typography component=\"h4\" className=\"table-text\">Make your first referral and start earning today.</Typography> <div className=\"table-refer\"> <Button variant=\"contained\" color=\"primary\" className=\"custom-primary-button-refer\"><Link to='home'><img src={\n          //             btnReferEarnings\n          //         }\n          //             alt=\"icon\" className=\"btn-gap\" />Refer Now</Link> </Button> </div> </>,\n          // }\n        },\n        actions: [{\n          icon: () => /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 41\n          }, this),\n          tooltip: 'Show User',\n          onClick: (evt, data) => {\n            this.showModal(evt, data);\n          }\n        }],\n        columns: COL_REFER,\n        data: dataDump\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.date_match_modal,\n        onClose: this.handleCloseSub,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        children: this.state.modalData == \"\" ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-title\",\n          children: \"Fetching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"modal-title\",\n            children: this.state.modalData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 person-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.modalData.avtar,\n              alt: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CustomTable, {\n            className: \"mt-3\",\n            options: {\n              paginationType: \"stepped\",\n              search: true,\n              paging: true,\n              filtering: false,\n              showTitle: false,\n              toolbar: true,\n              emptyRowsWhenPaging: false,\n              pageSize: 5,\n              actionsColumnIndex: -1\n            },\n            columns: COL_INSIDE,\n            data: this.state.modalData.bidsData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.handleCloseSub,\n              color: \"primary\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPartnerReferral.contextType = ContextMain;\nexport default PartnerReferral;","map":{"version":3,"sources":["/Users/himalaya/Documents/carbid/src/components/Newwallets/Newwallets.tsx"],"names":["React","Button","Dialog","DialogActions","dumpData","ReactGA","CustomTable","ContextMain","VisibilityIcon","PartnerReferral","Component","constructor","props","handleCloseSub","setState","date_match_modal","showModal","eve","data","console","log","event","category","action","label","modalData","state","render","COL_REFER","title","field","dataDump","context","userData","COL_INSIDE","paginationType","search","paging","filtering","showTitle","toolbar","emptyRowsWhenPaging","pageSize","actionsColumnIndex","icon","tooltip","onClick","evt","name","avtar","bidsData","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { PAGE_TWO_ERROR_TEXT } from './../common/constant';\nimport { isMobileValidNumber, dumpData } from './../common/Helperfunction';\nimport axios from \"axios\"\nimport { API } from './../common/constant';\nimport ReactGA from 'react-ga';\nimport CustomTable from './../common/CustomTable/customTable'\nimport { ContextMain } from './../common/ContextMain'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nclass PartnerReferral extends React.Component<any,\n    {\n\n        date_match_modal: boolean,\n        modalData: any\n    }> {\n\n    constructor(props: any) {\n        super(props);\n        this.state =\n        {\n            date_match_modal: false,\n            modalData: \"\"\n        }\n\n    }\n\n\n    handleCloseSub = () => {\n        this.setState({ date_match_modal: false })\n    };\n\n    showModal = (eve: any, data: any) => {\n        { console.log(\"modaldata\", data) }\n        ReactGA.event({\n            category: `Modal`,\n            action: 'Modal',\n            label: 'Modal Rendered'\n        });\n        this.setState({ date_match_modal: true, modalData: data })\n    }\n    render() {\n        const COL_REFER = [\n            { title: \"Customer Name\", field: \"name\" },\n            { title: \"Email\", field: \"email\" },\n            { title: \"Phone\", field: \"phone\" },\n            { title: \"Premium\", field: \"hasPremium\" },\n            { title: \"Max Bids\", field: \"bids\" },\n\n        ];\n\n        const dataDump: any = dumpData(this.context?.userData[0])\n\n        const COL_INSIDE = [\n            { title: \"Amount\", field: \"amount\" },\n            { title: \"Car Title\", field: \"carTitle\" },\n        ];\n\n\n        return (\n            <div className=\"max-width-in\">\n\n                <CustomTable className=\"mt-3\" options={\n                    {\n                        paginationType: \"stepped\",\n                        search: true,\n                        paging: true,\n                        filtering: false,\n                        showTitle: false,\n                        toolbar: true,\n                        emptyRowsWhenPaging: false,\n                        pageSize: 5,\n                        actionsColumnIndex: -1\n                    }\n                }\n                    localization={\n                        {\n                            // body: {\n                            //     emptyDataSourceMessage: <> <img src={\n                            //         tableIcon\n                            //     }\n                            //         alt=\"Icon\" className=\"table-icon\" /> <Typography component=\"h4\" className=\"table-text\">Make your first referral and start earning today.</Typography> <div className=\"table-refer\"> <Button variant=\"contained\" color=\"primary\" className=\"custom-primary-button-refer\"><Link to='home'><img src={\n                            //             btnReferEarnings\n                            //         }\n                            //             alt=\"icon\" className=\"btn-gap\" />Refer Now</Link> </Button> </div> </>,\n                            // }\n                        }\n                    }\n                    actions={[\n                        {\n                            icon: () => <VisibilityIcon />,\n                            tooltip: 'Show User',\n                            onClick: (evt: any, data: any) => {\n                                this.showModal(evt, data)\n                            }\n                        }\n                    ]}\n\n                    columns={\n                        COL_REFER\n                    }\n                    data={\n                        dataDump\n                    }\n                />\n\n                <Dialog\n                    open={this.state.date_match_modal}\n                    onClose={this.handleCloseSub}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\">\n                    {this.state.modalData == \"\" ?\n                        <h3 className=\"modal-title\">Fetching</h3>\n                        : <>\n                            <h3 className=\"modal-title\">{this.state.modalData.name}</h3>\n                            <div className=\"mb-3 person-icon\" >\n\n                                <img src={this.state.modalData.avtar} alt=\"icon\" />\n                            </div>\n                            <CustomTable className=\"mt-3\" options={\n                                {\n                                    paginationType: \"stepped\",\n                                    search: true,\n                                    paging: true,\n                                    filtering: false,\n                                    showTitle: false,\n                                    toolbar: true,\n                                    emptyRowsWhenPaging: false,\n                                    pageSize: 5,\n                                    actionsColumnIndex: -1\n                                }\n                            }\n                                columns={\n                                    COL_INSIDE\n                                }\n                                data={\n                                    this.state.modalData.bidsData\n                                }\n                            />\n\n                            <DialogActions>\n                                <Button onClick={this.handleCloseSub} color=\"primary\">\n                                    Close\n                            </Button>\n                            </DialogActions>\n                        </>}\n\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPartnerReferral.contextType = ContextMain\nexport default PartnerReferral;"]},"metadata":{},"sourceType":"module"}