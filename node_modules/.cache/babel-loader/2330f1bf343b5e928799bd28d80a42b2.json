{"ast":null,"code":"import _toConsumableArray from\"/Users/himalaya/Documents/carbid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";export var isMobileValidNumber=function isMobileValidNumber(mobileNumber){if(mobileNumber.length>10){return false;}mobileNumber=parseInt(mobileNumber,10);var mob=/^\\d{10}$/;return mob.test(mobileNumber);};export var dumpData=function dumpData(data){var dataDump=[];var rowId=1;if(data.length>0){data.map(function(refs,i){var dataSales={};dataSales['name']=refs.firstname+\" \"+refs.lastname;dataSales['email']=refs.email;dataSales['phone']=refs.phone;dataSales['hasPremium']=refs.hasPremium;dataSales['bids']=Math.max.apply(Math,_toConsumableArray(refs.bids.map(function(o){return o.amount;})).concat([0]));dataSales['bidsData']=refs.bids;dataSales['avtar']=refs.avatarUrl;dataDump.push(dataSales);});return dataDump;}};","map":{"version":3,"sources":["/Users/himalaya/Documents/carbid/src/components/common/Helperfunction.tsx"],"names":["isMobileValidNumber","mobileNumber","length","parseInt","mob","test","dumpData","data","dataDump","rowId","map","refs","i","dataSales","firstname","lastname","email","phone","hasPremium","Math","max","bids","o","amount","avatarUrl","push"],"mappings":"+JAAA,MAAO,IAAMA,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,YAAD,CAAuB,CACtD,GAAIA,YAAY,CAACC,MAAb,CAAsB,EAA1B,CAA8B,CAC1B,MAAO,MAAP,CACH,CACDD,YAAY,CAAGE,QAAQ,CAACF,YAAD,CAAe,EAAf,CAAvB,CACA,GAAMG,CAAAA,GAAG,CAAG,UAAZ,CACA,MAAOA,CAAAA,GAAG,CAACC,IAAJ,CAASJ,YAAT,CAAP,CACH,CAPM,CASP,MAAO,IAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAe,CACnC,GAAMC,CAAAA,QAAa,CAAG,EAAtB,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAIF,IAAI,CAACL,MAAL,CAAc,CAAlB,CAAqB,CACjBK,IAAI,CAACG,GAAL,CAAS,SAACC,IAAD,CAAYC,CAAZ,CAA0B,CAC/B,GAAMC,CAAAA,SAAc,CAAG,EAAvB,CACAA,SAAS,CAAC,MAAD,CAAT,CAAoBF,IAAI,CAACG,SAAL,CAAiB,GAAjB,CAAuBH,IAAI,CAACI,QAAhD,CACAF,SAAS,CAAC,OAAD,CAAT,CAAqBF,IAAI,CAACK,KAA1B,CACAH,SAAS,CAAC,OAAD,CAAT,CAAqBF,IAAI,CAACM,KAA1B,CACAJ,SAAS,CAAC,YAAD,CAAT,CAA0BF,IAAI,CAACO,UAA/B,CACAL,SAAS,CAAC,MAAD,CAAT,CAAoBM,IAAI,CAACC,GAAL,OAAAD,IAAI,oBAAQR,IAAI,CAACU,IAAL,CAAUX,GAAV,CAAc,SAACY,CAAD,QAAYA,CAAAA,CAAC,CAACC,MAAd,EAAd,CAAR,UAA6C,CAA7C,GAAxB,CACAV,SAAS,CAAC,UAAD,CAAT,CAAwBF,IAAI,CAACU,IAA7B,CACAR,SAAS,CAAC,OAAD,CAAT,CAAqBF,IAAI,CAACa,SAA1B,CACAhB,QAAQ,CAACiB,IAAT,CAAcZ,SAAd,EACH,CAVD,EAWA,MAAOL,CAAAA,QAAP,CACH,CACJ,CAjBM","sourcesContent":["export const isMobileValidNumber = (mobileNumber: any) => {\n    if (mobileNumber.length > 10) {\n        return false;\n    }\n    mobileNumber = parseInt(mobileNumber, 10);\n    const mob = /^\\d{10}$/;\n    return mob.test(mobileNumber);\n};\n\nexport const dumpData = (data: any) => {\n    const dataDump: any = []\n    let rowId = 1;\n    if (data.length > 0) {\n        data.map((refs: any, i: number) => {\n            const dataSales: any = {};\n            dataSales['name'] = refs.firstname + \" \" + refs.lastname\n            dataSales['email'] = refs.email\n            dataSales['phone'] = refs.phone\n            dataSales['hasPremium'] = refs.hasPremium\n            dataSales['bids'] = Math.max(...refs.bids.map((o: any) => o.amount), 0);\n            dataSales['bidsData'] = refs.bids\n            dataSales['avtar'] = refs.avatarUrl\n            dataDump.push(dataSales)\n        })\n        return dataDump\n    }\n}"]},"metadata":{},"sourceType":"module"}